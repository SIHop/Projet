package nf.GestionDexploitation;

import db.GestionnaireDB.DAO;
import db.GestionnaireDB.DAOFactory;
import java.util.ArrayList;

public class Service {

    private String codeService;
    private String nomService;
    private String idResponsable;
    private Localisation localisation;
    private ArrayList listeDeLits;
    private InformationDeContact informationDeContact;
    private TypeService typeService;

    public Service(String codeService, String nomService, String idResponsable, Localisation localisation, ArrayList<Lit> listeDeLits, InformationDeContact informationDeContact, TypeService typeService) {
        this.codeService = codeService;
        this.nomService = nomService;
        this.idResponsable = idResponsable;
        this.localisation = localisation;
        this.listeDeLits = listeDeLits;
        this.informationDeContact = informationDeContact;
        this.typeService = typeService;
    }

    /**
     * @return the codeService
     */
    public String getCodeService() {
        return codeService;
    }

    /**
     * @return the nomService
     */
    public String getNomService() {
        return nomService;
    }

    /**
     * affiche le médecin responsable du service 
     * @return the responsable
     */
    public Medecin getResponsable() {
        DAO<Personnel> personnelDAO = DAOFactory.getPersonelDAO();
        ArrayList<String> id = new ArrayList<>();
        id.add("idPersonnel");
        ArrayList<String> valId = new ArrayList<>();
        valId.add(this.idResponsable);
        return (Medecin) personnelDAO.find(id, valId);
    }

    /**
     * localisation du service au sein de l'hôpital 
     * @return the myLocalisation
     */
    public Localisation getLocalisation() {
        return localisation;
    }

    /**
     * @return the listeDeLits
     */
    public ArrayList getListeDeLits() {
        return listeDeLits;
    }

    /**
     * @return the myInformationDeContact
     */
    public InformationDeContact getInformationDeContact() {
        return informationDeContact;
    }

    /**
     * @return the typeService
     */
    public TypeService getTypeService() {
        return typeService;
    }
/**
 * affiche le type et le nom de service
 * @return 
 */
    @Override
    public String toString() {
        return " " + this.typeService.toString() + " " + this.nomService + " (" + this.getCodeService() + ")";
    }

    /**
     * @param nomService the nomService to set
     */
    public void setNomService(String nomService) {
        this.nomService = nomService;
    }

    /**
     * @param idResponsable the idResponsable to set
     */
    public void setIdResponsable(String idResponsable) {
        this.idResponsable = idResponsable;
    }

    /**
     * @param localisation the localisation to set
     */
    public void setLocalisation(Localisation localisation) {
        this.localisation = localisation;
    }

    /**
     * @param listeDeLits the listeDeLits to set
     */
    public void setListeDeLits(ArrayList listeDeLits) {
        this.listeDeLits = listeDeLits;
    }

    /**
     * @param informationDeContact the informationDeContact to set
     */
    public void setInformationDeContact(InformationDeContact informationDeContact) {
        this.informationDeContact = informationDeContact;
    }

    /**
     * @param typeService the typeService to set
     */
    public void setTypeService(TypeService typeService) {
        this.typeService = typeService;
    }

}
