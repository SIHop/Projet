package nf.GestionDexploitation;

import db.GestionnaireDB.DAO;
import db.GestionnaireDB.DAOFactory;
import java.util.ArrayList;

public class Location {
    
    private String idLit;
//    private String batiment;
//    private String etage;
//    private LocationType personLocationType;
//    private String pointOfCare;
//    private String piece;
//    private String statut;
    private boolean isOccuped;
    private char cote;
    private Localisation localisation;
    private String service;
    private int IPPoccupent;

    public Location(String identifient, boolean isOccuped, char cote, Localisation localisation, String service, int IPPoccupent) {
        this.idLit = identifient;
        this.isOccuped = isOccuped;
        this.cote = cote;
        this.localisation = localisation;
        this.service = service;
        this.IPPoccupent = IPPoccupent;
    }

    public String getIdLit() {
        return idLit;
    }

    public void setIdLit(String idLit) {
        this.idLit = idLit;
    }
/**
 * permet de savoir si le idLit est déjà occupé ou pas
 * @return 
 */
    public boolean isIsOccuped() {
        return isOccuped;
    }

    public void setIsOccuped(boolean isOccuped) {
        this.isOccuped = isOccuped;
    }

    public char getCote() {
        return cote;
    }

    public void setCote(char cote) {
        this.cote = cote;
    }

    public Localisation getLocalisation() {
        return localisation;
    }

    public void setLocalisation(Localisation localisation) {
        this.localisation = localisation;
    }

    public Service getService() {
        ArrayList<String> arg = new ArrayList<>(); arg.add("idService");
        ArrayList<String> val = new ArrayList<>(); val.add(this.service);
        DAO<Service> serviceDAO = DAOFactory.getServiceDAO();
        
        return serviceDAO.find(arg, val);
    }

    public void setService(Service service) {
        this.setService(service.getCodeService());
    }

    /**
     * @return the IPPoccupent
     */
    public int getIPPoccupent() {
        return IPPoccupent;
    }
    /**
     * Selon l'occupation du idLit : s'il est occupé, la méthode permet d'afficher l'IPP du patient qui l'occupe, sinon la méthode affiche que le idLit n'est pas occupé. 
     * @return 
     */
    @Override
    public String toString(){
        String retour = "Le lit " +this.idLit+ ", localité"+this.localisation.toString() + " du côté " + this.cote;
        if(this.isOccuped){
            retour +=" est occupé par " + this.IPPoccupent;
        }else{
            retour += " n'est pas occupé";
        }
            
        return retour;
    }

    /**
     * @param service the service to set
     */
    public void setService(String service) {
        this.service = service;
    }

    /**
     * @param IPPoccupent the IPPoccupent to set
     */
    public void setIPPoccupent(int IPPoccupent) {
        this.IPPoccupent = IPPoccupent;
    }
    

}