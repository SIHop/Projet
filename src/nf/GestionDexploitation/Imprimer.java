package nf.GestionDexploitation;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import java.awt.BorderLayout;
import java.text.MessageFormat;
import javax.swing.JFrame;
import java.awt.event.*;
import javax.swing.JTextArea;

public class Imprimer {

    //fonction qui permet d'imprimer un texte, avec un entête et un bas de page. Sauvegarde dans un document XPS.
    private static void imprimer(JTextArea zoneDeTexte, MessageFormat entete, MessageFormat basDePage) {
        try {

            zoneDeTexte.print(entete, basDePage, true, null, null, true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    //permet de lancer l'impression d'une JTextArea
    public void impression(JTextArea zoneText, String entete) {
        JScrollPane jScrollPane = new JScrollPane(zoneText);
        final MessageFormat hautDePage = new MessageFormat(entete);
        final MessageFormat basDePage = new MessageFormat("_");
        JButton boutonImprimer = new JButton("Imprimer");
        
        //lorsqu'on clique sur le bouton imprimer, on appelle la méthode imprimer de la classe
        boutonImprimer.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                imprimer(zoneText, hautDePage, basDePage);
            }
        });

        //créé une fenêtre d'aperçu du contenu à imprimer
        JPanel contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout());
        contentPane.add(jScrollPane, BorderLayout.CENTER);
        contentPane.add(boutonImprimer, BorderLayout.SOUTH);

        JFrame frame = new JFrame();
        frame.setTitle("Impression");
        frame.setSize(600, 400);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        frame.setContentPane(contentPane);
        frame.setVisible(true);
    }
}
